"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[322],{9322:(e,t,i)=>{i.r(t),i.d(t,{default:()=>y});var s=i(7437),n=i(2265),o=i(7776),a=i(8938),r=i(8659),l=i(4605),m=i(3466),c=i(2554),h=i(4204),d=i(6033),u=i(8521);class p{setFilmNoise(e){let t=this.filmPass;(null==t?void 0:t.uniforms)&&(t.uniforms.nIntensity.value=e)}setFilmScanlines(e){let t=this.filmPass;(null==t?void 0:t.uniforms)&&(t.uniforms.sIntensity.value=e)}setScanlineCount(e){let t=this.filmPass;(null==t?void 0:t.uniforms)&&(t.uniforms.sCount.value=e)}setFilmGrayscale(e){let t=this.filmPass;(null==t?void 0:t.uniforms)&&(t.uniforms.grayscale.value=e)}setFilmEnabled(e){this.filmPass&&(this.filmPass.enabled=e)}setBloomIntensity(e){this.bloomPass&&(this.bloomPass.strength=e)}setBloomRadius(e){this.bloomPass&&(this.bloomPass.radius=e)}setBloomThreshold(e){this.bloomPass&&(this.bloomPass.threshold=e)}toggleAntiAliasing(e){this.fxaaPass&&this.smaaPass&&(this.smaaPass.enabled="SMAA"===e)}resize(e,t){if(this.composer){if(this.composer.setSize(e,t),this.fxaaPass&&this.fxaaPass.material.uniforms){let i=this.composer.renderer.getPixelRatio();this.fxaaPass.material.uniforms.resolution.value.x=1/(e*i),this.fxaaPass.material.uniforms.resolution.value.y=1/(t*i)}this.smaaPass&&this.smaaPass.setSize(e,t)}}render(){this.enabled&&this.composer&&this.composer.render()}setEnabled(e){this.enabled=e}dispose(){this.composer&&this.composer.dispose()}constructor(e,t,i){this.enabled=!0;let s=new o.dd2(window.innerWidth,window.innerHeight,{minFilter:o.wem,magFilter:o.wem,format:o.wk1,colorSpace:o.KI_,samples:4});this.composer=new r.x(e,s);let n=new l.C(t,i);this.composer.addPass(n),this.bloomPass=new m.m(new o.FM8(window.innerWidth,window.innerHeight),1,.4,1),this.bloomPass.renderToScreen=!1,this.composer.addPass(this.bloomPass),this.filmPass=new u.t(0,!1),this.filmPass.renderToScreen=!1,this.composer.addPass(this.filmPass),this.fxaaPass=new c.T(h.C);let a=e.getPixelRatio();this.fxaaPass.material.uniforms&&(this.fxaaPass.material.uniforms.resolution.value.x=1/(window.innerWidth*a*.75),this.fxaaPass.material.uniforms.resolution.value.y=1/(window.innerHeight*a*.75)),this.fxaaPass.enabled=!0,this.fxaaPass.renderToScreen=!0,this.composer.addPass(this.fxaaPass),this.smaaPass=new d.d(window.innerWidth*a*.75,window.innerHeight*a*.75),this.smaaPass.enabled=!1,this.composer.addPass(this.smaaPass)}}let f=[0xff5500,22015,43520];class g{handleMouseMove(e){this.mousePos.x=e.clientX/window.innerWidth*2-1,this.mousePos.y=-(2*(e.clientY/window.innerHeight))+1,this.raycaster.setFromCamera(this.mousePos,this.sceneObjects.camera);let t=this.sceneObjects.camera.position.z-1.5,i=new o.Pa4;i.copy(this.raycaster.ray.direction),i.multiplyScalar(t),i.add(this.sceneObjects.camera.position),this.sceneObjects.shaderMaterial&&this.sceneObjects.shaderMaterial.uniforms.mousePosition.value.copy(i)}constructor(e){this.mousePos=new o.FM8,this.raycaster=new o.iMs,this.sceneObjects=e,this.handleMouseMove=this.handleMouseMove.bind(this)}}var v=i(4898);class w{startFrame(){this.stats.begin()}endFrame(){this.stats.end(),this.updateMetrics()}updateMetrics(){let e=this.renderer.info,t=performance.now();this.frameCount++,this.frameTime+=t-this.lastTime,this.lastTime=t,this.frameTime>=1e3&&(this.memoryUsage={geometries:e.memory.geometries,textures:e.memory.textures,drawCalls:e.render.calls},this.frameTime=0,this.frameCount=0)}getMetrics(){var e,t;let i=this.renderer.info;return{fps:this.stats.showPanel(0),memory:{...this.memoryUsage,programs:null!==(t=null===(e=i.programs)||void 0===e?void 0:e.length)&&void 0!==t?t:0},renderer:{triangles:i.render.triangles,points:i.render.points,lines:i.render.lines},capabilities:{maxTextures:this.renderer.capabilities.maxTextures,maxVertexTextures:this.renderer.capabilities.maxVertexTextures,maxTextureSize:this.renderer.capabilities.maxTextureSize,precision:this.renderer.capabilities.precision}}}analyzePerformance(){let e=this.getMetrics(),t=[];return e.memory.drawCalls>1e3&&t.push("High number of draw calls. Consider using mesh merging or instancing."),e.memory.geometries>1e3&&t.push("High number of geometries. Consider geometry instancing or pooling."),e.renderer.triangles>1e6&&t.push("High triangle count. Consider using LOD or geometry simplification."),{metrics:e,issues:t,recommendations:this.getOptimizationRecommendations(e)}}getOptimizationRecommendations(e){let t=[];return e.memory.drawCalls>1e3&&t.push({type:"draw-calls",title:"Reduce Draw Calls",steps:["Merge similar geometries","Use geometry instancing","Implement frustum culling","Use texture atlasing"]}),e.renderer.triangles>1e6&&t.push({type:"geometry",title:"Optimize Geometry",steps:["Implement Level of Detail (LOD)","Use geometry compression","Remove invisible faces","Optimize vertex count"]}),t}dispose(){this.stats.dom&&this.stats.dom.parentElement&&this.stats.dom.parentElement.removeChild(this.stats.dom)}constructor(e){this.frameTime=0,this.frameCount=0,this.lastTime=0,this.memoryUsage={geometries:0,textures:0,drawCalls:0},this.renderer=e,this.stats=new v.Z,this.stats.showPanel(0),document.body.appendChild(this.stats.dom),this.stats.dom.style.position="absolute",this.stats.dom.style.top="0px",this.stats.dom.style.right="0px"}}let x=[0xff5500,22015,43520];class P{start(){this.animate()}stop(){null!==this.frameId&&cancelAnimationFrame(this.frameId),this.performanceMonitor.dispose()}animate(){if(this.frameId=requestAnimationFrame(this.animate),this.frameCount++,this.performanceMonitor.startFrame(),this.time+=.001,this.sceneObjects.shaderMaterial&&(this.sceneObjects.shaderMaterial.uniforms.time.value=this.time),this.particleSystem&&(this.particleSystem.rotation.x+=this.rotationSpeed.x,this.particleSystem.rotation.y+=this.rotationSpeed.y,this.particleSystem.rotation.z+=this.rotationSpeed.z),[[.5*Math.sin(.7*this.time),.5*Math.cos(.5*this.time),.5*Math.cos(.3*this.time)],[.5*Math.cos(.3*this.time),.5*Math.sin(.5*this.time),.5*Math.sin(.7*this.time)],[.5*Math.sin(.7*this.time),.5*Math.cos(.3*this.time),.5*Math.sin(.5*this.time)]].forEach((e,t)=>{this.sceneObjects.lightGroups[t].group.position.set(e[0],e[1],e[2])}),this.sceneObjects.shaderMaterial&&(this.sceneObjects.shaderMaterial.uniforms.pointLights.value=this.sceneObjects.lightGroups.map((e,t)=>({position:e.position,color:new o.Ilk(x[t]),intensity:3}))),this.sceneObjects.postProcessing.render(),this.performanceMonitor.endFrame(),this.frameCount%100==0){let e=this.performanceMonitor.analyzePerformance();e.issues.length>0&&console.log("Performance Analysis:",e)}}setRotationSpeed(e,t,i){this.rotationSpeed.set(e,t,i)}getRotationSpeed(){return this.rotationSpeed.clone()}stopRotation(){this.rotationSpeed.set(0,0,0)}startRotation(){this.rotationSpeed.set(2e-4,1e-4,3e-4)}constructor(e){this.frameId=null,this.particleSystem=null,this.time=0,this.frameCount=0,this.sceneObjects=e,this.rotationSpeed=new o.Pa4(2e-4,1e-4,3e-4),this.performanceMonitor=new w(e.renderer),this.sceneObjects.scene.traverse(e=>{e instanceof o.woe&&(this.particleSystem=e)}),this.animate=this.animate.bind(this)}}function b(e){let{postProcessing:t}=e,[i,o]=(0,n.useState)(!1);return t.toggleAntiAliasing("none"),(0,s.jsxs)("div",{className:"fixed top-4 right-4 bg-black/50 p-4 rounded text-white z-50",children:[(0,s.jsx)("button",{onClick:()=>o(!i),className:"w-full mb-2 px-4 py-2 bg-white/10 rounded hover:bg-white/20 transition-colors",children:i?"Hide Effects Controls":"Show Effects Controls"}),i&&(0,s.jsxs)("div",{className:"space-y-4",children:[(0,s.jsxs)("div",{className:"space-y-2",children:[(0,s.jsx)("h3",{className:"font-semibold",children:"Bloom"}),(0,s.jsxs)("div",{className:"space-y-1",children:[(0,s.jsx)("label",{className:"block text-sm",children:"Strength"}),(0,s.jsx)("input",{type:"range",min:"0",max:"5",step:"0.1",defaultValue:"0",onChange:e=>t.setBloomIntensity(parseFloat(e.target.value)),className:"w-full"})]}),(0,s.jsxs)("div",{className:"space-y-1",children:[(0,s.jsx)("label",{className:"block text-sm",children:"Radius"}),(0,s.jsx)("input",{type:"range",min:"0",max:"1",step:"0.01",defaultValue:"0",onChange:e=>t.setBloomRadius(parseFloat(e.target.value)),className:"w-full"})]}),(0,s.jsxs)("div",{className:"space-y-1",children:[(0,s.jsx)("label",{className:"block text-sm",children:"Threshold"}),(0,s.jsx)("input",{type:"range",min:"0",max:"1",step:"0.01",defaultValue:"0",onChange:e=>t.setBloomThreshold(parseFloat(e.target.value)),className:"w-full"})]})]}),(0,s.jsxs)("div",{className:"space-y-2",children:[(0,s.jsx)("h3",{className:"font-semibold",children:"Film Effect"}),(0,s.jsx)("div",{className:"mb-2",children:(0,s.jsxs)("label",{className:"inline-flex items-center",children:[(0,s.jsx)("input",{type:"checkbox",defaultChecked:!1,onChange:e=>t.setFilmEnabled(e.target.checked),className:"mr-2"}),"Enable Film Effect"]})}),(0,s.jsxs)("div",{className:"space-y-1",children:[(0,s.jsx)("label",{className:"block text-sm",children:"Noise Intensity"}),(0,s.jsx)("input",{type:"range",min:"0",max:"1",step:"0.01",defaultValue:"0",onChange:e=>t.setFilmNoise(parseFloat(e.target.value)),className:"w-full"})]}),(0,s.jsxs)("div",{className:"space-y-1",children:[(0,s.jsx)("label",{className:"block text-sm",children:"Scanline Intensity"}),(0,s.jsx)("input",{type:"range",min:"0",max:"1",step:"0.01",defaultValue:"0",onChange:e=>t.setFilmScanlines(parseFloat(e.target.value)),className:"w-full"})]})]}),(0,s.jsxs)("div",{className:"space-y-2",children:[(0,s.jsx)("h3",{className:"font-semibold",children:"Anti-aliasing"}),(0,s.jsxs)("select",{onChange:e=>t.toggleAntiAliasing(e.target.value),className:"w-full bg-white/10 px-2 py-1 rounded",defaultValue:"none",children:[(0,s.jsx)("option",{value:"none",children:"None"}),(0,s.jsx)("option",{value:"SMAA",children:"SMAA"})]})]})]})]})}function y(){let e=(0,n.useRef)(null),[t,i]=(0,n.useState)(null),r=(0,n.useRef)(null),[l,m]=(0,n.useState)(!0);return(0,n.useEffect)(()=>{if(!e.current)return;let t=function(e){let t;let i=new o.xsS;i.background=new o.Ilk(0);let s=new o.cPb(90,window.innerWidth/window.innerHeight,.1,10);s.position.set(0,0,.5);let n=new o.CP7({antialias:!0,alpha:!0,powerPreference:"high-performance",precision:"mediump"});n.setPixelRatio(Math.min(window.devicePixelRatio,2)),n.setSize(window.innerWidth,window.innerHeight),n.autoClear=!1,e.appendChild(n.domElement);let r=f.map(()=>{let e=new o.ZAu,t=new o.u9r,s=new o.F5T,n=new o.Kj0(t,s);return n.visible=!1,e.add(n),i.add(e),{sphere:n,group:e,position:e.position}}),l=new o.jyz({uniforms:{pointLights:{value:r.map((e,t)=>({position:e.position,color:new o.Ilk(f[t]),intensity:3}))},mousePosition:{value:new o.Pa4(0,0,0)},mouseRadius:{value:.3},mouseStrength:{value:.1},time:{value:0}},vertexShader:"\n  uniform vec3 mousePosition;\n  uniform float mouseRadius;\n  uniform float mouseStrength;\n  uniform float time;\n  \n  struct PointLight {\n    vec3 position;\n    vec3 color;\n    float intensity;\n  };\n  \n  uniform PointLight pointLights[3];\n  \n  varying vec3 vPosition;\n  varying vec3 vNormal;\n  varying vec3 vViewPosition;\n  \n  vec3 calculateGravityEffect(vec3 particlePos, vec3 sourcePos, float intensity) {\n    vec3 direction = sourcePos - particlePos;\n    float distance = length(direction);\n    float gravityRadius = 1.0;\n    float gravityStrength = 0.2;\n    \n    if (distance < gravityRadius) {\n      float force = (1.0 - distance / gravityRadius);\n      force = pow(force, 1.0) * gravityStrength * intensity;\n      return normalize(direction) * force;\n    }\n    return vec3(0.0);\n  }\n  \n  vec3 addTurbulence(vec3 pos, float time) {\n    float speed = 0.01;\n    float scale = 0.5;\n    return vec3(\n      sin(pos.x * 2.0 + time * speed) * scale,\n      cos(pos.y * 2.0 + time * speed) * scale,\n      sin(pos.z * 2.0 + time * speed) * scale\n    ) * 0.04;\n  }\n  \n  void main() {\n    vPosition = position;\n    vNormal = normalize(position);\n    \n    vec3 finalPosition = position;\n    \n    for(int i = 0; i < 3; i++) {\n      finalPosition += calculateGravityEffect(position, pointLights[i].position, pointLights[i].intensity);\n    }\n    \n    finalPosition += addTurbulence(position, time);\n    \n    vec3 mouseDir = position - mousePosition;\n    float mouseDistance = length(mouseDir);\n    \n    if (mouseDistance < mouseRadius) {\n      float force = 1.0 - (mouseDistance / mouseRadius);\n      force = pow(force, 2.0);\n      finalPosition += normalize(mouseDir) * force * mouseStrength;\n    }\n    \n    vec4 mvPosition = modelViewMatrix * vec4(finalPosition, 1.0);\n    vViewPosition = -mvPosition.xyz;\n    gl_Position = projectionMatrix * mvPosition;\n    gl_PointSize = 2.5 * (1.0 / -mvPosition.z);\n  }\n",fragmentShader:"\n  varying vec3 vPosition;\n  varying vec3 vNormal;\n  varying vec3 vViewPosition;\n  \n  struct PointLight {\n    vec3 position;\n    vec3 color;\n    float intensity;\n  };\n  \n  uniform PointLight pointLights[3];\n  \n  vec3 sphereRefraction(vec3 lightDir, vec3 normal, float ior) {\n    float cosI = dot(normal, lightDir);\n    float cosT2 = 1.0 - ior * ior * (1.0 - cosI * cosI);\n    if (cosT2 > 0.0) {\n      return ior * lightDir - (ior * cosI + sqrt(cosT2)) * normal;\n    }\n    return reflect(lightDir, normal);\n  }\n  \n  float fresnel(vec3 viewDir, vec3 normal, float ior) {\n    float cosTheta = dot(viewDir, normal);\n    float sinTheta = sqrt(1.0 - cosTheta * cosTheta);\n    float r0 = (1.0 - ior) / (1.0 + ior);\n    r0 = r0 * r0;\n    if(sinTheta == 0.0) return r0;\n    return r0 + (1.0 - r0) * pow(1.0 - cosTheta, 5.0);\n  }\n  \n  void main() {\n    vec2 center = gl_PointCoord * 2.0 - 1.0;\n    float dist = length(center);\n    if (dist > 1.0) discard;\n    \n    vec3 normal;\n    normal.xy = center * sqrt(1.0 - dist * dist);\n    normal.z = sqrt(1.0 - normal.x * normal.x - normal.y * normal.y);\n    normal = normalize(normal);\n    \n    vec3 viewDir = normalize(vViewPosition);\n    vec3 baseColor = vec3(0.2, 0.3, 0.4);\n    vec3 finalColor = vec3(0.0);\n    float totalIllumination = 0.0;\n    \n    float ior = 1.5;\n    float absorption = 0.1;\n    float dispersive = 0.02;\n    \n    for(int i = 0; i < 3; i++) {\n      vec3 lightDir = normalize(pointLights[i].position - vPosition);\n      float distance = length(pointLights[i].position - vPosition);\n      \n      vec3 refractionR = sphereRefraction(lightDir, normal, ior - dispersive);\n      vec3 refractionG = sphereRefraction(lightDir, normal, ior);\n      vec3 refractionB = sphereRefraction(lightDir, normal, ior + dispersive);\n      \n      float internalPathR = abs(dot(refractionR, normal));\n      float internalPathG = abs(dot(refractionG, normal));\n      float internalPathB = abs(dot(refractionB, normal));\n      \n      vec3 attenuation = vec3(\n        exp(-absorption * internalPathR * distance),\n        exp(-absorption * internalPathG * distance),\n        exp(-absorption * internalPathB * distance)\n      );\n      \n      float fresnelTerm = fresnel(viewDir, normal, ior);\n      \n      vec3 reflectDir = reflect(-lightDir, normal);\n      float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32.0);\n      \n      vec3 lightContribution = pointLights[i].color * pointLights[i].intensity * (\n        (1.0 - fresnelTerm) * vec3(\n          dot(refractionR, viewDir),\n          dot(refractionG, viewDir),\n          dot(refractionB, viewDir)\n        ) * attenuation +\n        fresnelTerm * spec\n      );\n      \n      float causticIntensity = pow(max(0.0, dot(refractionG, viewDir)), 8.0);\n      lightContribution += pointLights[i].color * causticIntensity * 2.0;\n      \n      finalColor += lightContribution;\n      totalIllumination += length(lightContribution);\n    }\n    \n    float visibilityThreshold = 0.1;\n    if (totalIllumination < visibilityThreshold) {\n      discard;\n    }\n    \n    float scattering = pow(1.0 - dist, 2.0) * 0.2;\n    finalColor += baseColor * scattering * totalIllumination;\n    \n    float alpha = smoothstep(visibilityThreshold, 0.5, totalIllumination);\n    alpha *= (0.8 + (1.0 - dist * dist) * 0.2);\n    \n    finalColor = min(finalColor * 2.0, vec3(1.0));\n    \n    gl_FragColor = vec4(finalColor, alpha);\n  }\n",transparent:!0,depthWrite:!1,depthTest:!1,blending:o.WMw}),m=function(e){let t=new Float32Array(6e5);for(let e=0;e<2e5;e++){let i=3*e,s=Math.random()*Math.PI*2,n=Math.acos(2*Math.random()-1),o=1.5*Math.cbrt(Math.random());t[i]=o*Math.sin(n)*Math.cos(s),t[i+1]=o*Math.sin(n)*Math.sin(s),t[i+2]=o*Math.cos(n)}let i=new o.u9r;return i.setAttribute("position",new o.TlE(t,3)),i.computeBoundingSphere(),new o.woe(i,e)}(l);i.add(m);let c=function(e,t){let i=new a.z(e,t.domElement);return i.enableDamping=!0,i.dampingFactor=.05,i.enableZoom=!1,i.enablePan=!1,i.autoRotate=!0,i.autoRotateSpeed=.5,i.rotateSpeed=.5,i}(s,n),h=new p(n,i,s),d=()=>{t=requestAnimationFrame(d),c.update(),h.render()};d();let u=()=>{let e=window.innerWidth,t=window.innerHeight;s.aspect=e/t,s.updateProjectionMatrix(),n.setSize(e,t),h.resize(e,t)};return window.addEventListener("resize",u),{scene:i,camera:s,renderer:n,shaderMaterial:l,lightGroups:r,postProcessing:h,controls:c,cleanup:()=>{window.removeEventListener("resize",u),cancelAnimationFrame(t),c.dispose(),n.dispose(),h.dispose()}}}(e.current);i(t);let s=new g(t),n=new P(t);r.current=n;let l=()=>{let{camera:e,renderer:i}=t;e.aspect=window.innerWidth/window.innerHeight,e.updateProjectionMatrix(),i.setSize(window.innerWidth,window.innerHeight),t.postProcessing.resize(window.innerWidth,window.innerHeight)};return window.addEventListener("mousemove",s.handleMouseMove),window.addEventListener("resize",l),n.start(),()=>{window.removeEventListener("mousemove",s.handleMouseMove),window.removeEventListener("resize",l),n.stop(),t.cleanup()}},[]),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{ref:e,className:"fixed top-0 left-0 w-full h-full -z-10"}),t&&(0,s.jsx)(b,{postProcessing:t.postProcessing}),(0,s.jsx)("button",{onClick:()=>{r.current&&(m(!l),l?r.current.stopRotation():r.current.startRotation())},className:"fixed bottom-4 right-4 px-4 py-2 bg-black/50 text-white rounded hover:bg-black/70 transition-colors z-50",children:l?"Stop Rotation":"Start Rotation"})]})}}}]);